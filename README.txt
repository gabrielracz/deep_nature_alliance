3D space exploration game 

Attributions:
Planetary textures taken from https://www.solarsystemscope.com/textures/ (CC BY 4.0)
Habitable worlds textures taken from https://www.texturesforplanets.com/texture-packs.shtml
Cactus meshes and textures taken from Cactus | Pack by YadroGames https://sketchfab.com/3d-models/cactus-pack-588596f1601d48e6ad4cb24b31c3f33c
Sand /desert texture taken from https://polyhaven.com/a/excavated_soil_wall

For Assignment 6:
Quentin Wolkensperg, Sean Meaney, Gabe Racz

BUILDING:

cmake .
make
./dna

RELEVANT FILES:
src/game/terrain.cpp
include/game/terrain.cpp
src/game/agent.cpp
src/game/fp_player.cpp
(possibly) src/game/game.cpp

resources/shaders/normal_map_vp.glsl
resources/shaders/normal_map_fp.glsl


TERRAIN (MOON SURFACE):
    Terrain generation can be seen in the following files:
        logic:
            src/game/terrain.cpp
                Height:
                    GenerateHeightmap()
                        - Samples array generated by image using external python program plugged right into terrain.h
                    GenerateQMoon()
                        - adds some more crazy craters and weird generation ontop of the first height map
                Normals and other values:
                    - the functions are self explanatory
            include/game/terrain.h
        
        game.cpp:
            has some loading functionality and loads the instances

        shaders:
            resources/shaders/normal_map_vp.glsl 
            resources/shaders/normal_map_fp.glsl

WALKING:
    agent.cpp:
        has player physics and movement
    fp_player.cpp:
        has player controls and specialty functions

NOTES:
two impassable arrays are generated one for full impassable where the player cannot
pass no matter what

and obstacle array which is really just used for colour actually. The fp_player
itself samples the slope and handles if it can traverse it or not.

all the slope sampling (interpolation) is done in the terrain.cpp class

CONTROL NOTES:
WASD - to move
mouse - look around
space - jump
space + space - dash

steep terrain cannot be traversed downwards, side to side or upwards
to traverse steep terrain jump and dash.
terrain borders cannot be passed this way as they are set as impassable.
this is checked by running SamplePassable(x,y) instead of SampleSlope(x,y)
these checks are done in agent.cpp.
This was done more for the sake of the game as we will probably handle slopes a bit differently as in the assignment.